Контрольные вопросы часть 1. Базовый синтаксис.

1. Что такое виртуальная машина?

Виртуальная машина это программа выполняющая наше написанное ПО под конкретную платформу. 
Т.е. переводит наш скомпилированный байт-код в машинные операции.

2. К какому типа языка программирование относиться Java?

Язык Java это интерпретируемый язык. Написанный нами код компилируется в так называемый байт-код,
а он в свою очередь уже подается в интерпретатор(Виртуальная машина) 

3. Из каких компонентов состоит Java?

Java состоит из компилятора языка, виртуальной машины и различных библиотек и утилит.

4. Для чего используется JDK?

JDK - это Java Development Kit, т.е. набор для разработки ПО. Он включает в себя
компилятор(javac), JRE (Java runtime environment) - виртуальная машина и набор библиотек.
Т.е. JDK используется для разработки и запуска пограммного обеспечения.


5. Для чего используется JRE?

JRE(Java runtime environment) - обеспечивает выполнение Java-программы на любой аппаратной платформе и на любой ОС.
Включает в себя виртуальную машину(VM) и набо стандартных библиотек.

6. Для чего используется VM?

VM (Virtual Machine) - виртуальная машина служит для запуска Java-программы на конкретной платформе пользователя.

7. Расскажите про базовые типы.

В Java есть два типа это примитивные и ссылочные.
Примитивные: boolean, byte, short, char, int, long, float, double.

Это типы хранящие заданное значение, они никуда не ссылают и не на что не указывают просто содержат данные.
Они разделяются на логичекий тип(boolean), целочисленные(short, byte, int, long), с плавающей точкой(float, double)
и символьный(char).

Ссылочные типы - это типы которые указывают на что-либо(на объект). 
Т.е. они содержат адрес в памяти где лежит объект на который ссылаемся


8. Что такое примитивные типы?

Примитивные: boolean, byte, short, char, int, long, float, double.

Это типы хранящие заданное значение, они никуда не ссылают и не на что не указывают просто содержат данные.
Они разделяются на логичекий тип(boolean), целочисленные(short, byte, int, long), с плавающей точкой(float, double)
и символьный(char).

9. Что такое классы обертки?

Классы помещяющие примитивные типы в объект. Т.е. представление примитивного типа, как объект.
Они предоставляют широкий диапазон методов для работы с переменной.

10. Что такое автобоксинг и анбоксинг?

Автобоксинг - помещение примитивного типа в класс обертку.

Integer integer = 5;

Анбоксинг - присваивание значения класса обертки примитивному типу.

int i = new Integer (5);


11. Как в Java передаются параметры в методы?

Параметры передаются по значению. Т.е. в методе создается локальная переменная аргумента и 
ей присваивается значение передаваемого параметра.

12. Почему нельзя изменить ссылку на объект в методе?

Потому, что параметры передаются по значению, в нутри метода мы изменим локальную ссылку на объект,
но это не как не повлияет на ссылку которую мы передавали в метод.

13. Описать механизм создания байт кода.

Создаем класс - файл с классом с расширением *.java.
Запускаем компилятор javac, где указываем что компилируем и куда сложить выход.
На выходе получаем файл с таким же названием как на входе, но с расширением *.class - это и есть байт код.


14. Что такое оператор условия?

Это операторы(ключевые слова языка) создающие ветвление алгоритма программ.

15. Какие типы операторов условий существуют?

Существует конструкция if-else

if (Условие){
}else{
}

Существует конструкция множественного условия switch case
switch(Переменная):
{
	case Значение 1:
		break;
	case Значение 2:
		break;
	default:
		break;
}

Существут тернарный оператор условия

(Условие) ? Истино : Ложно;

16. Почему нельзя сравнивать ссылочные типы по оператору ==?

Потому, что буду сравниваться адреса в памяти на которые указывают ссылки, а не сами объекты.
И они буду отличаться.

17. Почему примитивные типы можно сравнивать через оператор ==?

Потому, что они эти типы содержат значения, и оператором == буду сравниваться значения этих переменных.


18. Какие объекты могут быть использованы в операторе switch?

Можно использовать простые типы byte, short, char, int. Также можно использовать строки(String),
а также специальные классы, которые являются обёрткой для примитивных типов: Character, Byte, Short, Integer.

19. Расскажите про булевы операции || && ?

|| - логическое ИЛИ, результат будет True хотя бы один операнд True.
&& - логическое И, результат будет False хотя бы один операнд False.

20. Что такое тернарное условие?

Тернарный оператор использует три операнда. Выражение записывается в следующей форме:

(Условие) ? Выражение, если условие Истино : Выражение, если условие Ложно;

21. Что такое циклы и для чего они используются?

Цикл — это многократно повторяющийся фрагмент программы.
Применяются очень широко, например для обход чего-либо и многократного повторения како-либо операции.

22.Для чего используется цикл for?

for - цикл типа "n-раз"

for(int i = 0; i < n; i++){}

Цикл используется многократного повтарения чего-либо, если мы четко знаем кол-во требуемых повторения.

23. Для чего используется цикл foreach?

Цикл типа:

for(String str: argv){}

Цикл используется при обходе различных массивов, предполагаю коллекций и других объектов, поддерживающих итератор.
При этом цикл выполняется кол-во раз равное кол-ву элементов.

24. Для чего используется цикл while?

Цикл - пока не выполнится условие

while(Условие){}

Цикл выполняется пока условие Истино.

Нужен для многократного повторения, когда мы не значем требуемого кол-ва итераций, а дожидаемся не определенного условия.

25. Для чего используется цикл do while?

do{}
while(Условие)

Этот цикл выполняется так же, если мы не знаем требуемое кол-во итераций.
Но этот цикл с пост условием, т.е. тело цикло выполнится хотя бы один раз.

26. Что такое массив?

Массив - это именнованное множество переменных, объектов одного типа.
Массив в Java это объект и доступ к нему осуществляется через ссылочный тип.


27. Как создать массив?

Создаем переменную ссылочного типа на массив и ссылаем её на созданный объект массива 10 элементов.

int[] array = new int[10];


Так же можно не указывать кол-в элементов, а сразу их объявить.

int[] array = new int[]{1, 2, 3};


28. Как присвоить значение ячейке массива?

Обратиться к массиву по индексу и присвоить значение. Индексировани массива начинается с нуля.

array[0] = 10;
array[0] = 20;

29. Как можно пройти по всем элементам массива?

С помощью циклов, например:

for(int item: array){
	System.out.println(item);
}

Где item элемент цикла в каждой итерации.

Второй вариант:
for(int i = 0; i < array.length; i++){
	System.out.println(array[i]);
}

Тут мы инкрменетируем перемнную, которая является индексом массива, до значения размера этого массива.


30. Как можно найти элемент в массиве?

С помощью цикла и условного оператора

for(int item: array){
	if(item == 0)
	{
		System.out.println("Найденный элемент");
		break;
	}
}

31. Что будет если обратить к несуществующей ячейки массива?

На этапе выполнения программы выскочит исключение и программа аварийно завершится

32. Как удалить ячейку в массие?

Ячейку удалить нельзя, но можно её обнулить значение или ссылку на объект, которую она содержала.

33.Как отредактировать ячейку в массиве?

Так же как и присвоить ей значение.
Обратиться к массиву по индексу и присвоить значение. Индексировани массива начинается с нуля.

array[0] = 10;
array[0] = 20;